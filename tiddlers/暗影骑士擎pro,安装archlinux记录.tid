created: 20230313120713300
creator: 孙文彬
modified: 20230313120721107
modifier: 孙文彬
title: 暗影骑士擎pro,安装archlinux记录
type: text/vnd.tiddlywiki

! 暗影骑士擎pro,安装archlinux记录

!! 安装前的准备

!!! 准备安装镜像

在[清华大学开源镜像源](https://mirrors.tuna.tsinghua.edu.cn/archlinux/iso/)下载最新的archiso文件

!!! 准备一个u盘,制作启动u盘

建议使用 `ventoy`​软件，`ventoy`​会把u盘分成两个分区

第一个分区可以格式化成 `exFAT`​，可以拷贝各种镜像;第二分区是 32MB 的VTOYEFI分区,不要动它

把前面下载的iso文件放入第一个分区

!!! 关闭安全启动

关闭电脑,再次启动的同时按f2键,进入bios

设置bios密码,然后你就可以设置关闭安全启动了

设置f12快速启动菜单

!! 开始安装

!!! 进入archlivecd

开机的时候按f12进入选择菜单,选中你的u盘,回车

在`ventoy`​菜单中选择arch的那一项

!!! 联网

老老实实插网线

获取IP地址

```
  systemctl start dhcpd
```

测试网络连接

```
  ping www.baidu.com
```

!!! 更新系统时间

```bash
timedatectl set-ntp true
```

!!! 分区

* 先用 `lsblk`​查看硬盘设备
* 再用`cfdisk`​分区
* sdb1

  ** 1MB
  ** 标签BIOS boot
  ** 未格式化
  ** 给gpt+bios的方案安装grub用
* sdb2

  ** 500MB
  ** 标签EFI System
  ** fat16
  ** efi分区
* sdb3

  ** 剩下的全部
  ** 标签linux file
  ** btrfs
  ** 根目录

!!! 格式化文件系统

```bash
mkfs.vfat /dev/sdb2
mkfs.btrfs /dev/sdb3
```

!!! 给btrfs建立子卷

```bash
mount /dev/sdb3 /mnt
cd /mnt
btrfs subvolume create @boot
btrfs subvolume create @
btrfs subvolume create @home
cd /
umount /mnt
```

!!! 挂载分区

```bash
mount /dev/sdb3 /mnt -o subvol=@

mkdir /mnt/boot
mkdir /mnt/boot/efi
mkdir /mnt/home

mount /dev/sdb3 /mnt/boot -o subvol=@boot
mount /dev/sdb2 /mnt/boot/efi
mount /dev/sdb3 /mnt/home -o subvol=@home
```

!!! 安装系统

```bash
pacstrap /mnt base base-devel linux-zen linux-zen-headers linux-firmware nano neovim networkmanager btrfs-progs grub efibootmgr
```

!!! 生成`fstab`​

```bash
genfstab -U /mnt > /mnt/etc/fstab
```

!!! chroot

```bash
arch-chroot /mnt
```

!!! 设置时区

```bash
ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
hwclock --systohc --localtime
pacman -S ntp
systemctl enable ntpd
```

!!! 本地化设置

移除  `/etc/locale.gen`​ 对应行前面的注释符号（＃）即可，建议选择带 UTF-8 的项

```bash
/etc/locale.gen
------------------------------
en_US.UTF-8 UTF-8
zh_CN.UTF-8 UTF-8
```

然后创建`locale.conf`​文件，并编辑设定LANG变量，比如

```bash
/etc/locale.conf
------------------------------
LANG=zh_CN.UTF-8
```

然后执行

```bash
locale-gen
```

!!! 设置主机名字

```bash
echo Arch > /etc/hostname 
```

!!! 设置开机连接网络

```bash
systemctl enable NetworkManager
```

!!! `Initramfs`​配置

为了使 `btrfs check`​能够在挂载系统上使用

```bash
/etc/mkinitcpio.conf
------------------------
MODULES=(btrfs)
BINARIES=(btrfs)
```

重新创建一个`Initramfs`​

```
mkinitcpio -p linux-zen
```

!!! 设置`root`​密码

```bash
passwd
```

!!! 安装微码更新

安装 `microcode`​

```bash
pacman -S intel-ucode amd-ucode
```

!!! 安装grub

为btrfs配置文件

```bash
/etc/default/grub
--------------------
GRUB_PRELOAD_MODULES="... btrfs"
GRUB_DISABLE_OS_PROBER=false
```

安装grub

```bash
grub-install --target=i386-pc /dev/sdb
grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=SunWenBinArch --removable
```

然后生成  `grub.cfg`​  文件

```bash
grub-mkconfig -o /boot/grub/grub.cfg
```

!!! 退出 `chroot`​环境，输入 `exit`​或者按 `Ctrl+d`​

!!! 卸载文件系统

```bash
umount -R /mnt
```

!!! 关机，移除安装介质，然后重启(重启后你可以使用f12菜单来进入到刚刚安装好的archlinux)

!! 处理一些小事情

!!! 添加`archlinuxcn`​源

```bash
/etc/pacman.conf
------------------------
[archlinuxcn]
Server = https://mirrors.bfsu.edu.cn/archlinuxcn/$arch
```

安装`archlinuxcn-keyring`​

```bash
pacman -S archlinuxcn-keyring
```

!!! 安装`paru`​

```bash
pacman -S paru
```

!!! 安装中文字体

```bash
pacman -S noto-fonts noto-fonts-cjk noto-fonts-emoji noto-fonts-extra
pacman -S adobe-source-han-sans-otc-fonts adobe-source-han-serif-otc-fonts  
```

!!! 添加用户`arch`​(这里换成你想要的用户名)

```bash
useradd arch -U -G wheel -s /bin/bash -m 
passwd arch
```

!!! 添加`sudo`​权限

```bash
/etc/sudoers
------------------------
%wheel ALL=(ALL:ALL) ALL
```

!!! 解决一个音频驱动的问题

```bash
pacman -S sof-firmware
```

!! 开始安装桌面

这里推荐使用kde,因为gnome的分数缩放需要补丁

!!! 安装登录管理器

```bash
pacman -S sddm
systemctl enable sddm
```

!!! 安装server

```bash
pacman -S xorg-server
```

!!! 最小化安装kde

```bash
pacman -S plasma-meta dolphin
```

!! 解决双显卡问题

!!! 添加内核参数`ibt=off`​

```bash
/etc/default/grub
------------------------
GRUB_CMDLINE_LINUX_DEFAULT="... ibt=off"
```

然后再次生成  `grub.cfg`​  文件

```bash
grub-mkconfig -o /boot/grub/grub.cfg
```

!!! 安装n卡驱动与配置(使用`PRIME`​方案)

> 具体参见 [ArchWiki PRIME](https://wiki.archlinux.org/index.php/PRIME!PRIME_render_offload)

安装`nvidia`​包

```bash
pacman -S nvidia-dkms
```

安装`nvidia-prime`​包来使用官方配置(不起作用的话,你就要去 Wiki 看怎么手动配置了,不过我觉得一般都不需要手动配置啦)

```bash
pacman -S nvidia-prime
```

这时候重启系统就应该起作用了，你可以通过`prime-run`​命令使指定程序在 NVIDIA 显卡上渲染